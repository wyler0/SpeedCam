'use client'

/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/FzDu7gr47iI
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Link from "next/link"
import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from "@/components/ui/card"
import { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuCheckboxItem } from "@/components/ui/dropdown-menu"
import { Table, TableHeader, TableRow, TableHead, TableBody, TableCell } from "@/components/ui/table"
import { ChartTooltipContent, ChartTooltip, ChartContainer } from "@/components/ui/chart"
import { PolarAngleAxis, PolarGrid, Radar, RadarChart, Cell, CartesianGrid, XAxis, Line, LineChart, ScatterChart, Scatter, YAxis, ZAxis, Tooltip, Legend } from "recharts"

import { TrashIcon } from "@radix-ui/react-icons"
import { DetectionStatistics } from "@/components/custom/detection-statistics"
import { DetectionStatusToggle } from "@/components/custom/detection-status"
import { DetectedVehicles } from "@/components/custom/detected-vehicles"
import { SpeedCalibrations } from "@/components/custom/speed-calibrations"
import { CameraCalibrations } from "@/components/custom/camera-calibrations"
import { LatestDetectionImage } from "@/components/custom/latest-detection-image"

export function SpeedCam() {
  
  const handleSmoothScroll = (e: React.MouseEvent<HTMLAnchorElement>, targetId: string) => {
    e.preventDefault();
    const target = document.getElementById(targetId);
    if (target) {
      const elementPosition = target.getBoundingClientRect().top; 
      const headerOffset = document.querySelector('header')?.offsetHeight || 0; 
      const offsetPosition = elementPosition + window.scrollY - headerOffset; 
      window.scrollTo({ top: offsetPosition, behavior: 'smooth' }); 
    }
  };

  return (
    <div className="flex flex-col min-h-screen">
      <header className="bg-primary text-primary-foreground py-4 px-6 sticky top-0 z-10">
        <div className="max-w-6xl mx-auto flex items-center justify-between">
          <h1 className="text-2xl font-bold">SpeedCam</h1>
          <nav className="flex items-center gap-4">
            <Link href="#-time-detectirealon" className="hover:text-muted-foreground" prefetch={false} scroll={false} onClick={(e) => handleSmoothScroll(e, 'real-time-detection')}>
              Real-Time Detection
            </Link>
            <Link href="#detected-vehicles" className="hover:text-muted-foreground" prefetch={false} scroll={false} onClick={(e) => handleSmoothScroll(e, 'detected-vehicles')}>
              Detected Vehicles
            </Link>
            <Link href="#speed-calibration" className="hover:text-muted-foreground" prefetch={false} scroll={false} onClick={(e) => handleSmoothScroll(e, 'speed-calibration')}>
              Speed Calibration
            </Link>
            <Link href="#camera-calibration" className="hover:text-muted-foreground" prefetch={false} scroll={false} onClick={(e) => handleSmoothScroll(e, 'camera-calibration')}>
              Camera Calibration
            </Link>
          </nav>
        </div>
      </header>
      <main className="flex-1 bg-muted/40 p-6 md:p-10">
        <div className="max-w-6xl mx-auto grid gap-8">
          <section id="real-time-detection">
            <div className="flex items-center justify-between">
              <h2 className="text-2xl font-bold">Real-Time Detection</h2>
              <DetectionStatusToggle />
            </div>
            <div className="grid gap-6 mt-6">

              <LatestDetectionImage />
            </div>
            <div className="grid gap-6 mt-6">
              <DetectionStatistics />
            </div>
          </section>
          <section id="detected-vehicles">
            <DetectedVehicles />
          </section>
          <SpeedCalibrations />
          <CameraCalibrations />
        </div>
      </main>
    </div>
  )
}